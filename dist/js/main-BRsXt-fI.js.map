{"version":3,"file":"main-BRsXt-fI.js","sources":["../../public/js/core/eventBus.js","../../public/js/core/logger.js","../../public/js/core/event-delegation.js","../../public/js/ui/modals.js","../../public/main.js"],"sourcesContent":["/**\r\n * Event Bus Module\r\n * Central communication hub for module-to-module communication\r\n * Replaces the window.Module pattern with proper event-driven architecture\r\n */\r\n\r\nclass EventBus {\r\n    constructor() {\r\n        this.events = new Map();\r\n        this.modules = new Map();\r\n        this.debugMode = false;\r\n    }\r\n\r\n    /**\r\n     * Register a module with the event bus\r\n     * @param {string} moduleName - Name of the module\r\n     * @param {object} moduleInstance - The module instance\r\n     */\r\n    registerModule(moduleName, moduleInstance) {\r\n        this.modules.set(moduleName, moduleInstance);\r\n        this.log(`Module registered: ${moduleName}`);\r\n    }\r\n\r\n    /**\r\n     * Get a registered module\r\n     * @param {string} moduleName - Name of the module\r\n     * @returns {object|null} The module instance or null if not found\r\n     */\r\n    getModule(moduleName) {\r\n        return this.modules.get(moduleName) || null;\r\n    }\r\n\r\n    /**\r\n     * Subscribe to an event\r\n     * @param {string} eventName - Name of the event\r\n     * @param {function} callback - Function to call when event is emitted\r\n     * @param {object} context - Optional context for the callback\r\n     */\r\n    on(eventName, callback, context = null) {\r\n        if (!this.events.has(eventName)) {\r\n            this.events.set(eventName, []);\r\n        }\r\n\r\n        this.events.get(eventName).push({\r\n            callback,\r\n            context,\r\n            once: false\r\n        });\r\n\r\n        this.log(`Event listener added: ${eventName}`);\r\n    }\r\n\r\n    /**\r\n     * Subscribe to an event that only fires once\r\n     * @param {string} eventName - Name of the event\r\n     * @param {function} callback - Function to call when event is emitted\r\n     * @param {object} context - Optional context for the callback\r\n     */\r\n    once(eventName, callback, context = null) {\r\n        if (!this.events.has(eventName)) {\r\n            this.events.set(eventName, []);\r\n        }\r\n\r\n        this.events.get(eventName).push({\r\n            callback,\r\n            context,\r\n            once: true\r\n        });\r\n\r\n        this.log(`One-time event listener added: ${eventName}`);\r\n    }\r\n\r\n    /**\r\n     * Unsubscribe from an event\r\n     * @param {string} eventName - Name of the event\r\n     * @param {function} callback - The callback function to remove\r\n     */\r\n    off(eventName, callback) {\r\n        if (!this.events.has(eventName)) {\r\n            return;\r\n        }\r\n\r\n        const listeners = this.events.get(eventName);\r\n        const index = listeners.findIndex(listener => listener.callback === callback);\r\n\r\n        if (index !== -1) {\r\n            listeners.splice(index, 1);\r\n            this.log(`Event listener removed: ${eventName}`);\r\n        }\r\n\r\n        // Clean up empty event arrays\r\n        if (listeners.length === 0) {\r\n            this.events.delete(eventName);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Emit an event\r\n     * @param {string} eventName - Name of the event\r\n     * @param {*} data - Data to pass to the event listeners\r\n     * @returns {boolean} True if the event had listeners, false otherwise\r\n     */\r\n    emit(eventName, data = null) {\r\n        this.log(`Event emitted: ${eventName}`, data);\r\n\r\n        if (!this.events.has(eventName)) {\r\n            this.log(`No listeners for event: ${eventName}`);\r\n            return false;\r\n        }\r\n\r\n        const listeners = this.events.get(eventName);\r\n        const toRemove = [];\r\n\r\n        // Call all listeners\r\n        listeners.forEach((listener, index) => {\r\n            try {\r\n                if (listener.context) {\r\n                    listener.callback.call(listener.context, data);\r\n                } else {\r\n                    listener.callback(data);\r\n                }\r\n\r\n                // Mark one-time listeners for removal\r\n                if (listener.once) {\r\n                    toRemove.push(index);\r\n                }\r\n            } catch (error) {\r\n                console.error(`Error in event listener for ${eventName}:`, error);\r\n            }\r\n        });\r\n\r\n        // Remove one-time listeners (in reverse order to maintain indices)\r\n        toRemove.reverse().forEach(index => {\r\n            listeners.splice(index, 1);\r\n        });\r\n\r\n        // Clean up empty event arrays\r\n        if (listeners.length === 0) {\r\n            this.events.delete(eventName);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Request data from a module via event\r\n     * @param {string} eventName - Name of the request event\r\n     * @param {*} requestData - Data to send with the request\r\n     * @returns {Promise} Promise that resolves with the response data\r\n     */\r\n    request(eventName, requestData = null) {\r\n        return new Promise((resolve, reject) => {\r\n            const responseEventName = `${eventName}:response:${Date.now()}`;\r\n\r\n            // Set up one-time listener for the response\r\n            this.once(responseEventName, (responseData) => {\r\n                resolve(responseData);\r\n            });\r\n\r\n            // Emit the request with response event name\r\n            this.emit(eventName, {\r\n                data: requestData,\r\n                responseEvent: responseEventName\r\n            });\r\n\r\n            // Set timeout for request\r\n            setTimeout(() => {\r\n                reject(new Error(`Request timeout for event: ${eventName}`));\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Respond to a request event\r\n     * @param {object} requestData - The request data object\r\n     * @param {*} responseData - Data to send back\r\n     */\r\n    respond(requestData, responseData) {\r\n        if (requestData && requestData.responseEvent) {\r\n            this.emit(requestData.responseEvent, responseData);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Enable or disable debug logging\r\n     * @param {boolean} enabled - Whether to enable debug logging\r\n     */\r\n    setDebugMode(enabled) {\r\n        this.debugMode = enabled;\r\n    }\r\n\r\n    /**\r\n     * Log a message if debug mode is enabled\r\n     * @param {string} message - Message to log\r\n     * @param {*} data - Optional data to log\r\n     */\r\n    log(message, data = null) {\r\n        if (this.debugMode) {\r\n            if (data !== null) {\r\n                console.log(`[EventBus] ${message}`, data);\r\n            } else {\r\n                console.log(`[EventBus] ${message}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get debug information about the event bus\r\n     * @returns {object} Debug information\r\n     */\r\n    getDebugInfo() {\r\n        return {\r\n            registeredModules: Array.from(this.modules.keys()),\r\n            activeEvents: Array.from(this.events.keys()),\r\n            eventListenerCounts: Object.fromEntries(\r\n                Array.from(this.events.entries()).map(([name, listeners]) => [name, listeners.length])\r\n            )\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Clear all events and modules (useful for testing)\r\n     */\r\n    clear() {\r\n        this.events.clear();\r\n        this.modules.clear();\r\n        this.log('Event bus cleared');\r\n    }\r\n}\r\n\r\n// Create and export the global event bus instance\r\nconst eventBus = new EventBus();\r\n\r\n// Make it available globally for backward compatibility during transition\r\nif (typeof window !== 'undefined') {\r\n    window.eventBus = eventBus;\r\n}\r\n\r\nexport default eventBus;","/**\r\n * Logger Module\r\n * Centralized logging system with different log levels and formatting\r\n */\r\n\r\nclass Logger {\r\n    constructor(moduleName = 'App', level = 'info') {\r\n        this.moduleName = moduleName;\r\n        this.level = level;\r\n        this.levels = {\r\n            debug: 0,\r\n            info: 1,\r\n            warn: 2,\r\n            error: 3,\r\n            silent: 4\r\n        };\r\n        this.colors = {\r\n            debug: '#6c757d',\r\n            info: '#007bff',\r\n            warn: '#ffc107',\r\n            error: '#dc3545'\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Set the logging level\r\n     * @param {string} level - Log level (debug, info, warn, error, silent)\r\n     */\r\n    setLevel(level) {\r\n        if (this.levels.hasOwnProperty(level)) {\r\n            this.level = level;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if a log level should be output\r\n     * @param {string} level - Log level to check\r\n     * @returns {boolean} True if should log\r\n     */\r\n    shouldLog(level) {\r\n        return this.levels[level] >= this.levels[this.level];\r\n    }\r\n\r\n    /**\r\n     * Format a log message\r\n     * @param {string} level - Log level\r\n     * @param {string} message - Log message\r\n     * @param {*} data - Optional data to include\r\n     * @returns {array} Formatted arguments for console\r\n     */\r\n    formatMessage(level, message, data = null) {\r\n        const timestamp = new Date().toISOString().split('T')[1].slice(0, -1);\r\n        const color = this.colors[level] || '#000000';\r\n\r\n        const formattedMessage = [\r\n            `%c[${timestamp}] [${this.moduleName}] ${level.toUpperCase()}: ${message}`,\r\n            `color: ${color}; font-weight: bold;`\r\n        ];\r\n\r\n        if (data !== null) {\r\n            formattedMessage.push(data);\r\n        }\r\n\r\n        return formattedMessage;\r\n    }\r\n\r\n    /**\r\n     * Log a debug message\r\n     * @param {string} message - Message to log\r\n     * @param {*} data - Optional data to include\r\n     */\r\n    debug(message, data = null) {\r\n        if (this.shouldLog('debug')) {\r\n            console.log(...this.formatMessage('debug', message, data));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Log an info message\r\n     * @param {string} message - Message to log\r\n     * @param {*} data - Optional data to include\r\n     */\r\n    info(message, data = null) {\r\n        if (this.shouldLog('info')) {\r\n            console.log(...this.formatMessage('info', message, data));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Log a warning message\r\n     * @param {string} message - Message to log\r\n     * @param {*} data - Optional data to include\r\n     */\r\n    warn(message, data = null) {\r\n        if (this.shouldLog('warn')) {\r\n            console.warn(...this.formatMessage('warn', message, data));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Log an error message\r\n     * @param {string} message - Message to log\r\n     * @param {*} data - Optional data to include\r\n     */\r\n    error(message, data = null) {\r\n        if (this.shouldLog('error')) {\r\n            console.error(...this.formatMessage('error', message, data));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Log a function entry\r\n     * @param {string} functionName - Name of the function\r\n     * @param {*} args - Function arguments\r\n     */\r\n    enter(functionName, args = null) {\r\n        this.debug(`→ ${functionName}()`, args);\r\n    }\r\n\r\n    /**\r\n     * Log a function exit\r\n     * @param {string} functionName - Name of the function\r\n     * @param {*} result - Function result\r\n     */\r\n    exit(functionName, result = null) {\r\n        this.debug(`← ${functionName}()`, result);\r\n    }\r\n\r\n    /**\r\n     * Time a function execution\r\n     * @param {string} label - Label for the timer\r\n     * @returns {object} Timer object with end() method\r\n     */\r\n    time(label) {\r\n        const startTime = performance.now();\r\n        console.time(`[${this.moduleName}] ${label}`);\r\n\r\n        return {\r\n            end: () => {\r\n                const endTime = performance.now();\r\n                const duration = endTime - startTime;\r\n                console.timeEnd(`[${this.moduleName}] ${label}`);\r\n                this.debug(`${label} completed in ${duration.toFixed(2)}ms`);\r\n                return duration;\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Group related log messages\r\n     * @param {string} groupName - Name of the group\r\n     * @param {function} callback - Function to execute within the group\r\n     * @param {boolean} collapsed - Whether to start collapsed\r\n     */\r\n    group(groupName, callback, collapsed = false) {\r\n        if (this.shouldLog('debug')) {\r\n            if (collapsed) {\r\n                console.groupCollapsed(`[${this.moduleName}] ${groupName}`);\r\n            } else {\r\n                console.group(`[${this.moduleName}] ${groupName}`);\r\n            }\r\n\r\n            try {\r\n                callback();\r\n            } finally {\r\n                console.groupEnd();\r\n            }\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Log a table of data\r\n     * @param {array|object} data - Data to display in table\r\n     * @param {string} label - Optional label for the table\r\n     */\r\n    table(data, label = 'Data') {\r\n        if (this.shouldLog('debug')) {\r\n            this.debug(label);\r\n            console.table(data);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a child logger with a sub-module name\r\n     * @param {string} subModuleName - Name of the sub-module\r\n     * @returns {Logger} New logger instance\r\n     */\r\n    child(subModuleName) {\r\n        return new Logger(`${this.moduleName}:${subModuleName}`, this.level);\r\n    }\r\n}\r\n\r\n/**\r\n * Create logger factory function\r\n * @param {string} moduleName - Name of the module\r\n * @param {string} level - Log level\r\n * @returns {Logger} Logger instance\r\n */\r\nexport function createLogger(moduleName, level = 'info') {\r\n    return new Logger(moduleName, level);\r\n}\r\n\r\n// Create and export default logger\r\nexport const logger = new Logger('App');\r\n\r\n// Make logger available globally for backward compatibility during transition\r\nif (typeof window !== 'undefined') {\r\n    window.logger = logger;\r\n    window.createLogger = createLogger;\r\n}\r\n\r\nexport default Logger;","/**\r\n * Event Delegation Module\r\n * Centralized event handling to replace inline onclick handlers\r\n */\r\n\r\nimport { createLogger } from './logger.js';\r\n\r\nconst logger = createLogger('Core:EventDelegation');\r\n\r\nclass EventDelegation {\r\n    constructor() {\r\n        this.handlers = new Map();\r\n        this.initialized = false;\r\n    }\r\n\r\n    /**\r\n     * Initialize event delegation system\r\n     */\r\n    initialize() {\r\n        if (this.initialized) {\r\n            logger.warn('Event delegation already initialized');\r\n            return;\r\n        }\r\n\r\n        logger.info('Initializing event delegation system');\r\n\r\n        // Set up global click handler for event delegation\r\n        document.addEventListener('click', this.handleGlobalClick.bind(this), true);\r\n\r\n        // Register all standard handlers\r\n        this.registerStandardHandlers();\r\n\r\n        this.initialized = true;\r\n        logger.info('Event delegation system initialized');\r\n    }\r\n\r\n    /**\r\n     * Handle global click events\r\n     * @param {Event} event - Click event\r\n     */\r\n    handleGlobalClick(event) {\r\n        const target = event.target;\r\n\r\n        // Handle data-action attributes\r\n        const action = target.dataset.action;\r\n        if (action && this.handlers.has(action)) {\r\n            event.preventDefault();\r\n            const handler = this.handlers.get(action);\r\n            handler(event, target);\r\n            return;\r\n        }\r\n\r\n        // Handle specific class-based actions\r\n        this.handleClassBasedActions(event, target);\r\n    }\r\n\r\n    /**\r\n     * Handle class-based actions\r\n     * @param {Event} event - Click event\r\n     * @param {HTMLElement} target - Target element\r\n     */\r\n    handleClassBasedActions(event, target) {\r\n        // Clear selection buttons\r\n        if (target.id?.includes('clearSelectionBtn')) {\r\n            event.preventDefault();\r\n            const essayIndex = target.id.includes('-') ?\r\n                parseInt(target.id.split('-')[1]) : undefined;\r\n            this.handleClearSelection(essayIndex);\r\n            return;\r\n        }\r\n\r\n        // Export/download buttons\r\n        if (target.textContent?.includes('Export to PDF')) {\r\n            event.preventDefault();\r\n            this.handleExportToPDF();\r\n            return;\r\n        }\r\n\r\n        if (target.textContent?.includes('Download All Essays')) {\r\n            event.preventDefault();\r\n            this.handleDownloadAllEssays();\r\n            return;\r\n        }\r\n\r\n        // Individual essay download\r\n        if (target.textContent?.includes('Download') && target.onclick?.toString().includes('downloadIndividualEssay')) {\r\n            event.preventDefault();\r\n            const match = target.onclick.toString().match(/downloadIndividualEssay\\((\\d+)\\)/);\r\n            if (match) {\r\n                this.handleDownloadIndividualEssay(parseInt(match[1]));\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Student header toggles\r\n        if (target.onclick?.toString().includes('toggleStudentDetails')) {\r\n            event.preventDefault();\r\n            const match = target.onclick.toString().match(/toggleStudentDetails\\((\\d+)\\)/);\r\n            if (match) {\r\n                this.handleToggleStudentDetails(parseInt(match[1]));\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Profile management\r\n        if (target.onclick?.toString().includes('showProfileForm')) {\r\n            event.preventDefault();\r\n            const match = target.onclick.toString().match(/showProfileForm\\('([^']+)'\\)/);\r\n            const profileId = match ? match[1] : undefined;\r\n            this.handleShowProfileForm(profileId);\r\n            return;\r\n        }\r\n\r\n        if (target.onclick?.toString().includes('deleteProfile')) {\r\n            event.preventDefault();\r\n            const match = target.onclick.toString().match(/deleteProfile\\('([^']+)'\\)/);\r\n            if (match) {\r\n                this.handleDeleteProfile(match[1]);\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Essay management\r\n        if (target.onclick?.toString().includes('removeEssay')) {\r\n            event.preventDefault();\r\n            const match = target.onclick.toString().match(/removeEssay\\((\\d+)\\)/);\r\n            if (match) {\r\n                this.handleRemoveEssay(parseInt(match[1]));\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Manual grading actions\r\n        if (target.onclick?.toString().includes('saveManualGrading')) {\r\n            event.preventDefault();\r\n            this.handleSaveManualGrading();\r\n            return;\r\n        }\r\n\r\n        if (target.onclick?.toString().includes('cancelManualGrading')) {\r\n            event.preventDefault();\r\n            this.handleCancelManualGrading();\r\n            return;\r\n        }\r\n\r\n        // Editable sections\r\n        if (target.onclick?.toString().includes('editTeacherNotes')) {\r\n            event.preventDefault();\r\n            this.handleEditTeacherNotes(target);\r\n            return;\r\n        }\r\n\r\n        if (target.onclick?.toString().includes('editStat')) {\r\n            event.preventDefault();\r\n            const match = target.onclick.toString().match(/editStat\\(this,\\s*'([^']+)'\\)/);\r\n            if (match) {\r\n                this.handleEditStat(target, match[1]);\r\n            }\r\n            return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Register a custom action handler\r\n     * @param {string} action - Action name\r\n     * @param {Function} handler - Handler function\r\n     */\r\n    registerHandler(action, handler) {\r\n        this.handlers.set(action, handler);\r\n        logger.debug(`Registered handler for action: ${action}`);\r\n    }\r\n\r\n    /**\r\n     * Register all standard handlers\r\n     */\r\n    registerStandardHandlers() {\r\n        // Modal actions\r\n        this.registerHandler('close-modal', (event, target) => {\r\n            const modalId = target.closest('.modal')?.id;\r\n            if (modalId && window.ModalManager) {\r\n                const modalName = modalId.replace('Modal', '');\r\n                window.ModalManager.closeModal(modalName);\r\n            }\r\n        });\r\n\r\n        this.registerHandler('save-modal', (event, target) => {\r\n            const modalId = target.closest('.modal')?.id;\r\n            if (modalId && window.ModalManager) {\r\n                const modalName = modalId.replace('Modal', '');\r\n                window.ModalManager.saveModal(modalName);\r\n            }\r\n        });\r\n\r\n        // Category selection\r\n        this.registerHandler('select-category', (event, target) => {\r\n            const category = target.dataset.category;\r\n            if (category && window.CategorySelectionModule) {\r\n                window.CategorySelectionModule.selectCategory(category);\r\n            }\r\n        });\r\n\r\n        // Text selection\r\n        this.registerHandler('clear-selection', (event, target) => {\r\n            const essayIndex = target.dataset.essayIndex ?\r\n                parseInt(target.dataset.essayIndex) : undefined;\r\n            this.handleClearSelection(essayIndex);\r\n        });\r\n    }\r\n\r\n    // Handler implementations\r\n    handleClearSelection(essayIndex) {\r\n        if (typeof clearSelection === 'function') {\r\n            clearSelection(essayIndex);\r\n        } else {\r\n            logger.warn('clearSelection function not found');\r\n        }\r\n    }\r\n\r\n    handleExportToPDF() {\r\n        if (typeof exportToPDF === 'function') {\r\n            exportToPDF();\r\n        } else if (typeof exportManualResults === 'function') {\r\n            exportManualResults();\r\n        } else {\r\n            logger.warn('Export function not found');\r\n        }\r\n    }\r\n\r\n    handleDownloadAllEssays() {\r\n        if (typeof downloadAllEssays === 'function') {\r\n            downloadAllEssays();\r\n        } else {\r\n            logger.warn('downloadAllEssays function not found');\r\n        }\r\n    }\r\n\r\n    handleDownloadIndividualEssay(index) {\r\n        if (typeof downloadIndividualEssay === 'function') {\r\n            downloadIndividualEssay(index);\r\n        } else {\r\n            logger.warn('downloadIndividualEssay function not found');\r\n        }\r\n    }\r\n\r\n    handleToggleStudentDetails(index) {\r\n        if (typeof toggleStudentDetails === 'function') {\r\n            toggleStudentDetails(index);\r\n        } else {\r\n            logger.warn('toggleStudentDetails function not found');\r\n        }\r\n    }\r\n\r\n    handleShowProfileForm(profileId) {\r\n        if (typeof showProfileForm === 'function') {\r\n            showProfileForm(profileId);\r\n        } else {\r\n            logger.warn('showProfileForm function not found');\r\n        }\r\n    }\r\n\r\n    handleDeleteProfile(profileId) {\r\n        if (typeof deleteProfile === 'function') {\r\n            deleteProfile(profileId);\r\n        } else {\r\n            logger.warn('deleteProfile function not found');\r\n        }\r\n    }\r\n\r\n    handleRemoveEssay(index) {\r\n        if (typeof removeEssay === 'function') {\r\n            removeEssay(index);\r\n        } else {\r\n            logger.warn('removeEssay function not found');\r\n        }\r\n    }\r\n\r\n    handleSaveManualGrading() {\r\n        if (typeof saveManualGrading === 'function') {\r\n            saveManualGrading();\r\n        } else {\r\n            logger.warn('saveManualGrading function not found');\r\n        }\r\n    }\r\n\r\n    handleCancelManualGrading() {\r\n        if (typeof cancelManualGrading === 'function') {\r\n            cancelManualGrading();\r\n        } else {\r\n            logger.warn('cancelManualGrading function not found');\r\n        }\r\n    }\r\n\r\n    handleEditTeacherNotes(target) {\r\n        if (typeof editTeacherNotes === 'function') {\r\n            editTeacherNotes(target);\r\n        } else if (window.ModalManager) {\r\n            window.ModalManager.openTeacherNotesModal(target);\r\n        } else {\r\n            logger.warn('editTeacherNotes function not found');\r\n        }\r\n    }\r\n\r\n    handleEditStat(target, statType) {\r\n        if (typeof editStat === 'function') {\r\n            editStat(target, statType);\r\n        } else {\r\n            logger.warn('editStat function not found');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clean up event delegation\r\n     */\r\n    destroy() {\r\n        if (this.initialized) {\r\n            document.removeEventListener('click', this.handleGlobalClick.bind(this), true);\r\n            this.handlers.clear();\r\n            this.initialized = false;\r\n            logger.info('Event delegation system destroyed');\r\n        }\r\n    }\r\n}\r\n\r\n// Create and export the event delegation instance\r\nconst eventDelegation = new EventDelegation();\r\n\r\n// Export for ES6 modules\r\nexport default eventDelegation;\r\n\r\n// Legacy global access\r\nif (typeof window !== 'undefined') {\r\n    window.EventDelegation = eventDelegation;\r\n}","/**\r\n * Modal Management Module\r\n * Handles all modal dialogs and their interactions\r\n */\r\n\r\nimport eventBus from '../core/eventBus.js';\r\nimport { createLogger } from '../core/logger.js';\r\n\r\nconst logger = createLogger('UI:Modals');\r\n\r\nclass ModalManager {\r\n    constructor() {\r\n        this.activeModal = null;\r\n        this.modals = new Map();\r\n        this.modalStack = [];\r\n    }\r\n\r\n    /**\r\n     * Initialize modal functionality\r\n     */\r\n    initialize() {\r\n        logger.info('Initializing modal functionality');\r\n\r\n        this.registerModals();\r\n        this.setupEventListeners();\r\n        this.setupKeyboardHandlers();\r\n\r\n        eventBus.registerModule('ModalManager', this);\r\n    }\r\n\r\n    /**\r\n     * Register all available modals\r\n     */\r\n    registerModals() {\r\n        // Teacher Notes Modal\r\n        this.registerModal('teacherNotes', {\r\n            element: document.getElementById('teacherNotesModal'),\r\n            handlers: {\r\n                open: this.openTeacherNotesModal.bind(this),\r\n                close: this.closeTeacherNotesModal.bind(this),\r\n                save: this.saveTeacherNotes.bind(this)\r\n            }\r\n        });\r\n\r\n        // Edit Highlight Modal\r\n        this.registerModal('editHighlight', {\r\n            element: document.getElementById('editModal'),\r\n            handlers: {\r\n                open: this.openEditModal.bind(this),\r\n                close: this.closeEditModal.bind(this),\r\n                save: this.saveEditModal.bind(this)\r\n            }\r\n        });\r\n\r\n        // Profile Management Modal (if exists)\r\n        const profileModal = document.getElementById('profileModal');\r\n        if (profileModal) {\r\n            this.registerModal('profileManagement', {\r\n                element: profileModal,\r\n                handlers: {\r\n                    open: this.openProfileModal.bind(this),\r\n                    close: this.closeProfileModal.bind(this)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Register a modal with the manager\r\n     * @param {string} modalId - Unique identifier for the modal\r\n     * @param {object} config - Modal configuration\r\n     */\r\n    registerModal(modalId, config) {\r\n        if (!config.element) {\r\n            logger.warn(`Modal element not found for: ${modalId}`);\r\n            return;\r\n        }\r\n\r\n        this.modals.set(modalId, {\r\n            id: modalId,\r\n            element: config.element,\r\n            handlers: config.handlers || {},\r\n            data: {}\r\n        });\r\n\r\n        // Set up close button if it exists\r\n        const closeBtn = config.element.querySelector('.modal-close-btn');\r\n        if (closeBtn) {\r\n            closeBtn.addEventListener('click', () => this.closeModal(modalId));\r\n        }\r\n\r\n        // Set up save button if it exists\r\n        const saveBtn = config.element.querySelector('.modal-save-btn');\r\n        if (saveBtn) {\r\n            saveBtn.addEventListener('click', () => this.saveModal(modalId));\r\n        }\r\n\r\n        // Set up cancel button if it exists\r\n        const cancelBtn = config.element.querySelector('.modal-cancel-btn');\r\n        if (cancelBtn) {\r\n            cancelBtn.addEventListener('click', () => this.closeModal(modalId));\r\n        }\r\n\r\n        // Set up remove button if it exists (for highlight modal)\r\n        const removeBtn = config.element.querySelector('.modal-remove-btn');\r\n        if (removeBtn) {\r\n            removeBtn.addEventListener('click', () => this.removeHighlight(modalId));\r\n        }\r\n\r\n        logger.debug(`Registered modal: ${modalId}`);\r\n    }\r\n\r\n    /**\r\n     * Set up event bus listeners\r\n     */\r\n    setupEventListeners() {\r\n        eventBus.on('modal:open', (data) => {\r\n            this.openModal(data.modalId, data.config);\r\n        });\r\n\r\n        eventBus.on('modal:close', (data) => {\r\n            if (data.modalId) {\r\n                this.closeModal(data.modalId);\r\n            } else {\r\n                this.closeActiveModal();\r\n            }\r\n        });\r\n\r\n        eventBus.on('modal:save', (data) => {\r\n            this.saveModal(data.modalId || this.activeModal);\r\n        });\r\n\r\n        // Teacher notes specific events\r\n        eventBus.on('teacher-notes:open', (data) => {\r\n            this.openTeacherNotesModal(data.element);\r\n        });\r\n\r\n        // Edit highlight specific events\r\n        eventBus.on('highlight:edit', (data) => {\r\n            this.openEditModal(data.element, data.category, data.notes);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Set up keyboard handlers\r\n     */\r\n    setupKeyboardHandlers() {\r\n        document.addEventListener('keydown', (e) => {\r\n            if (this.activeModal) {\r\n                switch (e.key) {\r\n                    case 'Escape':\r\n                        e.preventDefault();\r\n                        this.closeActiveModal();\r\n                        break;\r\n                    case 'Enter':\r\n                        if (e.ctrlKey || e.metaKey) {\r\n                            e.preventDefault();\r\n                            this.saveModal(this.activeModal);\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Open a modal\r\n     * @param {string} modalId - Modal identifier\r\n     * @param {object} config - Configuration for opening\r\n     */\r\n    openModal(modalId, config = {}) {\r\n        const modal = this.modals.get(modalId);\r\n        if (!modal) {\r\n            logger.error(`Modal not found: ${modalId}`);\r\n            return false;\r\n        }\r\n\r\n        logger.info(`Opening modal: ${modalId}`);\r\n\r\n        // Close any existing modal\r\n        if (this.activeModal) {\r\n            this.modalStack.push(this.activeModal);\r\n            this.closeModal(this.activeModal, false);\r\n        }\r\n\r\n        // Show the modal\r\n        modal.element.style.display = 'block';\r\n        modal.data = { ...config };\r\n        this.activeModal = modalId;\r\n\r\n        // Call custom open handler\r\n        if (modal.handlers.open) {\r\n            modal.handlers.open(config);\r\n        }\r\n\r\n        // Add backdrop click handler\r\n        this.setupBackdropClick(modal.element);\r\n\r\n        // Make modal draggable\r\n        this.makeDraggable(modal.element);\r\n\r\n        eventBus.emit('modal:opened', { modalId });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Close a modal\r\n     * @param {string} modalId - Modal identifier\r\n     * @param {boolean} checkStack - Whether to check modal stack for previous modal\r\n     */\r\n    closeModal(modalId, checkStack = true) {\r\n        const modal = this.modals.get(modalId);\r\n        if (!modal) {\r\n            logger.error(`Modal not found: ${modalId}`);\r\n            return false;\r\n        }\r\n\r\n        logger.info(`Closing modal: ${modalId}`);\r\n\r\n        // Hide the modal\r\n        modal.element.style.display = 'none';\r\n        modal.data = {};\r\n\r\n        // Clean up drag listeners\r\n        if (modal.element._dragCleanup) {\r\n            modal.element._dragCleanup();\r\n        }\r\n\r\n        // Call custom close handler\r\n        if (modal.handlers.close) {\r\n            modal.handlers.close();\r\n        }\r\n\r\n        // Update active modal\r\n        if (this.activeModal === modalId) {\r\n            this.activeModal = null;\r\n\r\n            // Check if there's a previous modal in the stack\r\n            if (checkStack && this.modalStack.length > 0) {\r\n                const previousModal = this.modalStack.pop();\r\n                this.openModal(previousModal);\r\n            }\r\n        }\r\n\r\n        eventBus.emit('modal:closed', { modalId });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Close the currently active modal\r\n     */\r\n    closeActiveModal() {\r\n        if (this.activeModal) {\r\n            this.closeModal(this.activeModal);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Save the current modal\r\n     * @param {string} modalId - Modal identifier\r\n     */\r\n    saveModal(modalId) {\r\n        const modal = this.modals.get(modalId);\r\n        if (!modal) {\r\n            logger.error(`Modal not found: ${modalId}`);\r\n            return false;\r\n        }\r\n\r\n        logger.info(`Saving modal: ${modalId}`);\r\n\r\n        // Call custom save handler\r\n        if (modal.handlers.save) {\r\n            modal.handlers.save();\r\n        }\r\n\r\n        eventBus.emit('modal:saved', { modalId });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Remove highlight for edit modal\r\n     * @param {string} modalId - Modal identifier\r\n     */\r\n    removeHighlight(modalId) {\r\n        const modal = this.modals.get(modalId);\r\n        if (!modal) {\r\n            logger.error(`Modal not found: ${modalId}`);\r\n            return false;\r\n        }\r\n\r\n        logger.info(`Removing highlight from modal: ${modalId}`);\r\n\r\n        if (modalId === 'editHighlight') {\r\n            const elementId = modal.element.dataset.editingElement;\r\n            if (elementId && window.HighlightingModule) {\r\n                const element = document.getElementById(elementId);\r\n                if (element) {\r\n                    window.HighlightingModule.removeHighlight(element);\r\n                    this.closeModal(modalId);\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        logger.warn(`Could not remove highlight for modal: ${modalId}`);\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Set up backdrop click to close modal\r\n     * @param {HTMLElement} modalElement - Modal element\r\n     */\r\n    setupBackdropClick(modalElement) {\r\n        modalElement.addEventListener('click', (e) => {\r\n            if (e.target === modalElement) {\r\n                this.closeActiveModal();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Make modal draggable by its header\r\n     * @param {HTMLElement} modalElement - Modal element\r\n     */\r\n    makeDraggable(modalElement) {\r\n        const modalContent = modalElement.querySelector('.modal-content');\r\n        const modalHeader = modalElement.querySelector('.modal-header');\r\n\r\n        if (!modalContent || !modalHeader) return;\r\n\r\n        let isDragging = false;\r\n        let currentX, currentY, initialX, initialY;\r\n        let xOffset = 0, yOffset = 0;\r\n\r\n        // Ensure the modal is positioned correctly for dragging\r\n        modalContent.style.position = 'absolute';\r\n        modalContent.style.top = '50%';\r\n        modalContent.style.left = '50%';\r\n        modalContent.style.transform = 'translate(-50%, -50%)';\r\n\r\n        modalHeader.style.cursor = 'move';\r\n        modalHeader.style.userSelect = 'none';\r\n\r\n        const dragStart = (e) => {\r\n            if (e.type === 'touchstart') {\r\n                initialX = e.touches[0].clientX - xOffset;\r\n                initialY = e.touches[0].clientY - yOffset;\r\n            } else {\r\n                initialX = e.clientX - xOffset;\r\n                initialY = e.clientY - yOffset;\r\n            }\r\n\r\n            if (e.target === modalHeader || modalHeader.contains(e.target)) {\r\n                isDragging = true;\r\n                modalContent.style.transition = 'none';\r\n            }\r\n        };\r\n\r\n        const dragEnd = () => {\r\n            isDragging = false;\r\n            modalContent.style.transition = '';\r\n        };\r\n\r\n        const drag = (e) => {\r\n            if (isDragging) {\r\n                e.preventDefault();\r\n\r\n                if (e.type === 'touchmove') {\r\n                    currentX = e.touches[0].clientX - initialX;\r\n                    currentY = e.touches[0].clientY - initialY;\r\n                } else {\r\n                    currentX = e.clientX - initialX;\r\n                    currentY = e.clientY - initialY;\r\n                }\r\n\r\n                xOffset = currentX;\r\n                yOffset = currentY;\r\n\r\n                modalContent.style.transform = `translate(calc(-50% + ${currentX}px), calc(-50% + ${currentY}px))`;\r\n            }\r\n        };\r\n\r\n        // Mouse events\r\n        modalHeader.addEventListener('mousedown', dragStart);\r\n        document.addEventListener('mousemove', drag);\r\n        document.addEventListener('mouseup', dragEnd);\r\n\r\n        // Touch events for mobile\r\n        modalHeader.addEventListener('touchstart', dragStart);\r\n        document.addEventListener('touchmove', drag);\r\n        document.addEventListener('touchend', dragEnd);\r\n\r\n        // Store cleanup function for later use\r\n        modalElement._dragCleanup = () => {\r\n            modalHeader.removeEventListener('mousedown', dragStart);\r\n            document.removeEventListener('mousemove', drag);\r\n            document.removeEventListener('mouseup', dragEnd);\r\n            modalHeader.removeEventListener('touchstart', dragStart);\r\n            document.removeEventListener('touchmove', drag);\r\n            document.removeEventListener('touchend', dragEnd);\r\n        };\r\n    }\r\n\r\n    // Specific modal handlers\r\n\r\n    /**\r\n     * Open teacher notes modal\r\n     * @param {HTMLElement} element - Element that triggered the modal\r\n     */\r\n    openTeacherNotesModal(element) {\r\n        const modal = this.modals.get('teacherNotes');\r\n        if (!modal) return;\r\n\r\n        const currentText = element.dataset.teacherNotes || '';\r\n        const textArea = document.getElementById('teacherNotesText');\r\n\r\n        if (textArea) {\r\n            textArea.value = currentText;\r\n        }\r\n\r\n        modal.element.dataset.targetElement = element.id;\r\n        this.openModal('teacherNotes', { targetElement: element });\r\n    }\r\n\r\n    /**\r\n     * Close teacher notes modal\r\n     */\r\n    closeTeacherNotesModal() {\r\n        this.closeModal('teacherNotes');\r\n    }\r\n\r\n    /**\r\n     * Save teacher notes\r\n     */\r\n    saveTeacherNotes() {\r\n        const modal = this.modals.get('teacherNotes');\r\n        const targetElementId = modal?.element.dataset.targetElement;\r\n        const textArea = document.getElementById('teacherNotesText');\r\n        const notesText = textArea?.value || '';\r\n\r\n        if (targetElementId) {\r\n            const targetElement = document.getElementById(targetElementId);\r\n            if (targetElement) {\r\n                targetElement.dataset.teacherNotes = notesText;\r\n\r\n                // Update visual indicator\r\n                if (notesText.trim()) {\r\n                    targetElement.style.backgroundColor = '#fff3cd';\r\n                    targetElement.title = 'Teacher notes: ' + notesText.substring(0, 100) +\r\n                                         (notesText.length > 100 ? '...' : '');\r\n                } else {\r\n                    targetElement.style.backgroundColor = '';\r\n                    targetElement.title = '';\r\n                }\r\n\r\n                eventBus.emit('teacher-notes:saved', {\r\n                    element: targetElement,\r\n                    notes: notesText\r\n                });\r\n            }\r\n        }\r\n\r\n        this.closeTeacherNotesModal();\r\n    }\r\n\r\n    /**\r\n     * Open edit highlight modal\r\n     * @param {HTMLElement} element - Element to edit\r\n     * @param {string} category - Current category\r\n     * @param {string} notes - Current notes\r\n     */\r\n    openEditModal(element, category = '', notes = '') {\r\n        const modal = this.modals.get('editHighlight');\r\n        if (!modal) return;\r\n\r\n        const categorySelect = document.getElementById('editCategory');\r\n        const notesTextArea = document.getElementById('editNotes');\r\n\r\n        if (categorySelect) {\r\n            categorySelect.value = category || element.dataset.category || 'grammar';\r\n        }\r\n        if (notesTextArea) {\r\n            notesTextArea.value = notes || element.dataset.notes || '';\r\n        }\r\n\r\n        modal.element.dataset.editingElement = element.id;\r\n        this.openModal('editHighlight', { targetElement: element, category, notes });\r\n    }\r\n\r\n    /**\r\n     * Close edit modal\r\n     */\r\n    closeEditModal() {\r\n        this.closeModal('editHighlight');\r\n    }\r\n\r\n    /**\r\n     * Save edit modal changes\r\n     */\r\n    saveEditModal() {\r\n        const modal = this.modals.get('editHighlight');\r\n        const modalElement = document.getElementById('editModal');\r\n        const notesTextArea = document.getElementById('editNotes');\r\n\r\n        // Get selected categories from modal data\r\n        const selectedCategories = modalElement?.dataset?.selectedCategories || '';\r\n        const categories = selectedCategories ? selectedCategories.split(',').filter(c => c.trim()) : [];\r\n        const notes = notesTextArea?.value || '';\r\n\r\n        logger.debug('Saving highlight edit:', { categories, notes });\r\n\r\n        const elementId = modal?.element.dataset?.editingElement;\r\n        if (elementId) {\r\n            const element = document.getElementById(elementId);\r\n            if (element) {\r\n                // Store multiple categories\r\n                element.dataset.category = categories.join(',');\r\n                element.dataset.notes = notes;\r\n\r\n                // Update visual styling (use first category as primary)\r\n                const primaryCategory = categories[0] || 'grammar';\r\n                if (window.HighlightingModule) {\r\n                    window.HighlightingModule.updateHighlightVisualStyling(element, primaryCategory);\r\n                }\r\n\r\n                eventBus.emit('highlight:updated', {\r\n                    element,\r\n                    categories,\r\n                    notes\r\n                });\r\n\r\n                logger.debug('Updated highlight element:', element);\r\n            } else {\r\n                logger.error('Could not find element to update:', elementId);\r\n            }\r\n        } else {\r\n            logger.error('No element ID stored for editing');\r\n        }\r\n\r\n        this.closeEditModal();\r\n    }\r\n\r\n    /**\r\n     * Open profile modal (placeholder for future implementation)\r\n     */\r\n    openProfileModal(config = {}) {\r\n        // Implementation will be added when profile modal is created\r\n        logger.info('Profile modal opened', config);\r\n    }\r\n\r\n    /**\r\n     * Close profile modal\r\n     */\r\n    closeProfileModal() {\r\n        this.closeModal('profileManagement');\r\n    }\r\n\r\n    /**\r\n     * Get the currently active modal\r\n     * @returns {string|null} Active modal ID\r\n     */\r\n    getActiveModal() {\r\n        return this.activeModal;\r\n    }\r\n\r\n    /**\r\n     * Check if a modal is registered\r\n     * @param {string} modalId - Modal identifier\r\n     * @returns {boolean} True if modal exists\r\n     */\r\n    hasModal(modalId) {\r\n        return this.modals.has(modalId);\r\n    }\r\n\r\n    /**\r\n     * Clean up modal manager\r\n     */\r\n    destroy() {\r\n        this.modals.clear();\r\n        this.modalStack = [];\r\n        this.activeModal = null;\r\n        logger.info('Modal manager destroyed');\r\n    }\r\n}\r\n\r\n// Create and export the modal manager instance\r\nconst modalManager = new ModalManager();\r\n\r\n// Export for ES6 modules\r\nexport default modalManager;\r\n\r\n// Legacy global access for backward compatibility during transition\r\nif (typeof window !== 'undefined') {\r\n    window.ModalManager = modalManager;\r\n\r\n    // Legacy function exports\r\n    window.openTeacherNotesModal = (element) => modalManager.openTeacherNotesModal(element);\r\n    window.closeTeacherNotesModal = () => modalManager.closeTeacherNotesModal();\r\n    window.saveTeacherNotes = () => modalManager.saveTeacherNotes();\r\n    window.closeEditModal = () => modalManager.closeEditModal();\r\n    window.saveEditModal = () => modalManager.saveEditModal();\r\n}","/**\r\n * Modern Application Entry Point\r\n * Handles ES6 module loading and initialization with Vite support\r\n */\r\n\r\n// Import core modules\r\nimport eventBus from './js/core/eventBus.js';\r\nimport { createLogger } from './js/core/logger.js';\r\nimport eventDelegation from './js/core/event-delegation.js';\r\n\r\n// Import UI modules\r\nimport modalManager from './js/ui/modals.js';\r\n\r\nconst logger = createLogger('App:Main');\r\n\r\nclass Application {\r\n    constructor() {\r\n        this.initialized = false;\r\n        this.modules = new Map();\r\n    }\r\n\r\n    /**\r\n     * Initialize the application\r\n     */\r\n    async initialize() {\r\n        if (this.initialized) {\r\n            logger.warn('Application already initialized');\r\n            return;\r\n        }\r\n\r\n        logger.info('🚀 Initializing modern application...');\r\n\r\n        try {\r\n            // Initialize core systems first\r\n            await this.initializeCore();\r\n\r\n            // Initialize UI systems\r\n            await this.initializeUI();\r\n\r\n            // Initialize feature modules\r\n            await this.initializeFeatures();\r\n\r\n            // Set up global error handling\r\n            this.setupErrorHandling();\r\n\r\n            this.initialized = true;\r\n            logger.info('✅ Modern application initialized successfully');\r\n\r\n            // Log module status\r\n            this.logModuleStatus();\r\n\r\n        } catch (error) {\r\n            logger.error('❌ Failed to initialize application:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialize core systems\r\n     */\r\n    async initializeCore() {\r\n        logger.info('Initializing core systems...');\r\n\r\n        // Initialize event bus\r\n        if (eventBus && typeof eventBus.initialize === 'function') {\r\n            eventBus.initialize();\r\n            this.modules.set('eventBus', eventBus);\r\n        }\r\n\r\n        // Initialize event delegation\r\n        if (eventDelegation && typeof eventDelegation.initialize === 'function') {\r\n            eventDelegation.initialize();\r\n            this.modules.set('eventDelegation', eventDelegation);\r\n        }\r\n\r\n        logger.info('✅ Core systems initialized');\r\n    }\r\n\r\n    /**\r\n     * Initialize UI systems\r\n     */\r\n    async initializeUI() {\r\n        logger.info('Initializing UI systems...');\r\n\r\n        // Initialize modal manager\r\n        if (modalManager && typeof modalManager.initialize === 'function') {\r\n            modalManager.initialize();\r\n            this.modules.set('modalManager', modalManager);\r\n        }\r\n\r\n        // Initialize tab management\r\n        if (window.TabManagementModule && typeof window.TabManagementModule.initialize === 'function') {\r\n            window.TabManagementModule.initialize();\r\n            this.modules.set('tabManagement', window.TabManagementModule);\r\n        }\r\n\r\n        // Initialize form handling\r\n        if (window.FormHandlingModule && typeof window.FormHandlingModule.setupManualGrading === 'function') {\r\n            window.FormHandlingModule.setupManualGrading();\r\n            this.modules.set('formHandling', window.FormHandlingModule);\r\n        }\r\n\r\n        logger.info('✅ UI systems initialized');\r\n    }\r\n\r\n    /**\r\n     * Initialize feature modules\r\n     */\r\n    async initializeFeatures() {\r\n        logger.info('Initializing feature modules...');\r\n\r\n        // Initialize grading display system\r\n        if (window.GradingDisplayModule && typeof window.GradingDisplayModule.initializeGradingDisplay === 'function') {\r\n            window.GradingDisplayModule.initializeGradingDisplay();\r\n            this.modules.set('gradingDisplay', window.GradingDisplayModule);\r\n        }\r\n\r\n        // Initialize highlighting system\r\n        if (window.HighlightingModule) {\r\n            this.modules.set('highlighting', window.HighlightingModule);\r\n        }\r\n\r\n        // Initialize text selection\r\n        if (window.TextSelectionModule) {\r\n            this.modules.set('textSelection', window.TextSelectionModule);\r\n        }\r\n\r\n        // Initialize category selection\r\n        if (window.CategorySelectionModule) {\r\n            this.modules.set('categorySelection', window.CategorySelectionModule);\r\n        }\r\n\r\n        // Initialize essay editing\r\n        if (window.EssayEditingModule) {\r\n            this.modules.set('essayEditing', window.EssayEditingModule);\r\n        }\r\n\r\n        // Initialize profiles module\r\n        if (window.ProfilesModule) {\r\n            this.modules.set('profiles', window.ProfilesModule);\r\n        }\r\n\r\n        // Initialize PDF export\r\n        if (window.PDFExportModule) {\r\n            this.modules.set('pdfExport', window.PDFExportModule);\r\n        }\r\n\r\n        logger.info('✅ Feature modules initialized');\r\n    }\r\n\r\n    /**\r\n     * Set up global error handling\r\n     */\r\n    setupErrorHandling() {\r\n        // Global error handler\r\n        window.addEventListener('error', (event) => {\r\n            logger.error('Global error caught:', {\r\n                message: event.message,\r\n                filename: event.filename,\r\n                lineno: event.lineno,\r\n                colno: event.colno,\r\n                error: event.error\r\n            });\r\n        });\r\n\r\n        // Promise rejection handler\r\n        window.addEventListener('unhandledrejection', (event) => {\r\n            logger.error('Unhandled promise rejection:', event.reason);\r\n        });\r\n\r\n        // Module loading error handler\r\n        window.addEventListener('error', (event) => {\r\n            if (event.target.tagName === 'SCRIPT') {\r\n                logger.error('Script loading error:', {\r\n                    src: event.target.src,\r\n                    error: event\r\n                });\r\n            }\r\n        }, true);\r\n\r\n        logger.info('✅ Global error handling set up');\r\n    }\r\n\r\n    /**\r\n     * Log the status of all modules\r\n     */\r\n    logModuleStatus() {\r\n        const status = {};\r\n        this.modules.forEach((module, name) => {\r\n            status[name] = !!module;\r\n        });\r\n\r\n        // Add legacy modules\r\n        status.legacy = {\r\n            UIInteractionsModule: !!window.UIInteractionsModule,\r\n            EssayManagementModule: !!window.EssayManagementModule,\r\n            BatchProcessingModule: !!window.BatchProcessingModule,\r\n            DisplayUtilsModule: !!window.DisplayUtilsModule\r\n        };\r\n\r\n        logger.info('📊 Module status:', status);\r\n    }\r\n\r\n    /**\r\n     * Get a module by name\r\n     * @param {string} name - Module name\r\n     * @returns {object|null} Module instance or null\r\n     */\r\n    getModule(name) {\r\n        return this.modules.get(name) || null;\r\n    }\r\n\r\n    /**\r\n     * Check if application is initialized\r\n     * @returns {boolean} True if initialized\r\n     */\r\n    isInitialized() {\r\n        return this.initialized;\r\n    }\r\n\r\n    /**\r\n     * Destroy the application\r\n     */\r\n    destroy() {\r\n        logger.info('🔄 Destroying application...');\r\n\r\n        // Destroy modules in reverse order\r\n        this.modules.forEach((module, name) => {\r\n            if (module && typeof module.destroy === 'function') {\r\n                try {\r\n                    module.destroy();\r\n                    logger.debug(`Destroyed module: ${name}`);\r\n                } catch (error) {\r\n                    logger.error(`Error destroying module ${name}:`, error);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.modules.clear();\r\n        this.initialized = false;\r\n\r\n        logger.info('✅ Application destroyed');\r\n    }\r\n}\r\n\r\n// Create application instance\r\nconst app = new Application();\r\n\r\n// Initialize when DOM is ready\r\nif (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n        app.initialize();\r\n    });\r\n} else {\r\n    // DOM is already ready\r\n    app.initialize();\r\n}\r\n\r\n// Export for global access and debugging\r\nwindow.App = app;\r\n\r\nexport default app;"],"names":["eventBus","constructor","this","events","Map","modules","debugMode","registerModule","moduleName","moduleInstance","set","log","getModule","get","on","eventName","callback","context","has","push","once","off","listeners","index","findIndex","listener","splice","length","delete","emit","data","toRemove","forEach","call","error","console","reverse","request","requestData","Promise","resolve","reject","responseEventName","Date","now","responseData","responseEvent","setTimeout","Error","respond","setDebugMode","enabled","message","getDebugInfo","registeredModules","Array","from","keys","activeEvents","eventListenerCounts","Object","fromEntries","entries","map","name","clear","window","Logger","level","levels","debug","info","warn","silent","colors","setLevel","hasOwnProperty","shouldLog","formatMessage","timestamp","toISOString","split","slice","color","formattedMessage","toUpperCase","enter","functionName","args","exit","result","time","label","startTime","performance","end","duration","timeEnd","toFixed","group","groupName","collapsed","groupCollapsed","groupEnd","table","child","subModuleName","createLogger","logger","eventDelegation","handlers","initialized","initialize","document","addEventListener","handleGlobalClick","bind","registerStandardHandlers","event","target","action","dataset","preventDefault","handler","handleClassBasedActions","id","includes","essayIndex","parseInt","handleClearSelection","textContent","handleExportToPDF","handleDownloadAllEssays","onclick","toString","match","handleDownloadIndividualEssay","handleToggleStudentDetails","profileId","handleShowProfileForm","handleDeleteProfile","handleRemoveEssay","handleSaveManualGrading","handleCancelManualGrading","handleEditTeacherNotes","handleEditStat","registerHandler","modalId","closest","ModalManager","modalName","replace","closeModal","saveModal","category","CategorySelectionModule","selectCategory","clearSelection","exportToPDF","exportManualResults","downloadAllEssays","downloadIndividualEssay","toggleStudentDetails","showProfileForm","deleteProfile","removeEssay","saveManualGrading","cancelManualGrading","editTeacherNotes","openTeacherNotesModal","statType","editStat","destroy","removeEventListener","EventDelegation","modalManager","activeModal","modals","modalStack","registerModals","setupEventListeners","setupKeyboardHandlers","registerModal","element","getElementById","open","close","closeTeacherNotesModal","save","saveTeacherNotes","openEditModal","closeEditModal","saveEditModal","profileModal","openProfileModal","closeProfileModal","config","closeBtn","querySelector","saveBtn","cancelBtn","removeBtn","removeHighlight","openModal","closeActiveModal","notes","e","key","ctrlKey","metaKey","modal","style","display","setupBackdropClick","makeDraggable","checkStack","_dragCleanup","previousModal","pop","elementId","editingElement","HighlightingModule","modalElement","modalContent","modalHeader","currentX","currentY","initialX","initialY","isDragging","xOffset","yOffset","position","top","left","transform","cursor","userSelect","dragStart","type","touches","clientX","clientY","contains","transition","dragEnd","drag","currentText","teacherNotes","textArea","value","targetElement","targetElementId","notesText","trim","backgroundColor","title","substring","categorySelect","notesTextArea","selectedCategories","categories","filter","c","join","primaryCategory","updateHighlightVisualStyling","getActiveModal","hasModal","app","initializeCore","initializeUI","initializeFeatures","setupErrorHandling","logModuleStatus","TabManagementModule","FormHandlingModule","setupManualGrading","GradingDisplayModule","initializeGradingDisplay","TextSelectionModule","EssayEditingModule","ProfilesModule","PDFExportModule","filename","lineno","colno","reason","tagName","src","status","module","legacy","UIInteractionsModule","EssayManagementModule","BatchProcessingModule","DisplayUtilsModule","isInitialized","readyState","App"],"mappings":"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"}